package org.twaindirect.session;

import org.json.JSONObject;

import java.io.File;

/**
 * Listener for events generated by Session during the scan operation that the caller
 * will want to be aware of, such as images being produced and the operation completing.
 */
public interface SessionListener {
    /**
     * Sent when an image has been completely received. The file
     * at pdfPath is a PDF file, and must be moved or copied out of this location,
     * as the file will be deleted upon return.
     *
     * @param pdfPath
     * @param metadata
     */
    void onImageReceived(Session session, File pdfPath, JSONObject metadata);

    /**
     * The new state is passed in because it's possible that it will change
     * before the caller has a chance to call session.getState(), so this
     * lets the caller see all state changes.
     */
    void onStateChanged(Session session, Session.State oldState, Session.State newState);

    /**
     * Status is used to indicate abnormal situations.
     */
    void onStatusChanged(Session session, boolean success, Session.StatusDetected status);

    /**
     * Done capturing, and all expected images have been delivered.
     */
    void onDoneCapturing(Session session);

    /**
     * Unable to establish or re-establish a waitForEvents listener,
     * so consider the session unusable.
     */
    void onConnectionError(Session session, Exception reason);
}
